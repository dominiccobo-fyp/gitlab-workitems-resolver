plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id "com.palantir.git-version" version "0.12.2"
}


group = 'com.dominiccobo.fyp'
version = versionDetails().lastTag

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://pkgs.dev.azure.com/1422016/_packaging/1422016/maven/v1'
        credentials {
            username "AZURE_ARTIFACTS"
            password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") ?: "${azureArtifactsGradleAccessToken}"
        }
    }
}

dependencies {
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.19.0'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.5.0.201909110433-r'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.1.8.RELEASE'
    implementation 'com.dominiccobo.fyp:context-lsp-api:0.2.3'
    implementation 'org.axonframework:axon-spring-boot-starter:4.2'
    implementation 'org.gitlab4j:gitlab4j-api:4.12.18'

    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'com.google.truth:truth:1.0'
}

publishing {
    repositories {
        maven {
            url 'https://pkgs.dev.azure.com/1422016/_packaging/1422016/maven/v1'
            credentials {
                username "AZURE_ARTIFACTS"
                password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") ?: "${azureArtifactsGradleAccessToken}"
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

sourceSets {
    integrationTest {
        java {
            srcDir "src/integration-test/java"
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
        resources {
            srcDir "src/integration-test/resources"
        }

    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
